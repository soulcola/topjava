Subject: [PATCH] 11_16_HW_fix_swagger
---
Index: src/main/java/ru/javawebinar/topjava/to/BaseTo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/to/BaseTo.java b/src/main/java/ru/javawebinar/topjava/to/BaseTo.java
--- a/src/main/java/ru/javawebinar/topjava/to/BaseTo.java	(revision 113d830901926443374bce7fb46cbdd37aaf0328)
+++ b/src/main/java/ru/javawebinar/topjava/to/BaseTo.java	(date 1713527492781)
@@ -1,8 +1,10 @@
 package ru.javawebinar.topjava.to;
 
+import io.swagger.annotations.ApiModelProperty;
 import ru.javawebinar.topjava.HasId;
 
 public abstract class BaseTo implements HasId {
+    @ApiModelProperty(hidden = true)
     protected Integer id;
 
     public BaseTo() {
Index: src/main/java/ru/javawebinar/topjava/model/User.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/model/User.java b/src/main/java/ru/javawebinar/topjava/model/User.java
--- a/src/main/java/ru/javawebinar/topjava/model/User.java	(revision 113d830901926443374bce7fb46cbdd37aaf0328)
+++ b/src/main/java/ru/javawebinar/topjava/model/User.java	(date 1713527526966)
@@ -1,7 +1,7 @@
 package ru.javawebinar.topjava.model;
 
-import com.fasterxml.jackson.annotation.JsonManagedReference;
 import com.fasterxml.jackson.annotation.JsonProperty;
+import io.swagger.annotations.ApiModelProperty;
 import org.hibernate.annotations.Cache;
 import org.hibernate.annotations.*;
 import org.hibernate.validator.constraints.Range;
@@ -25,11 +25,7 @@
 import static ru.javawebinar.topjava.util.UsersUtil.DEFAULT_CALORIES_PER_DAY;
 
 @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
-@NamedQueries({
-        @NamedQuery(name = User.DELETE, query = "DELETE FROM User u WHERE u.id=:id"),
-        @NamedQuery(name = User.BY_EMAIL, query = "SELECT DISTINCT u FROM User u LEFT JOIN FETCH u.roles WHERE u.email=?1"),
-        @NamedQuery(name = User.ALL_SORTED, query = "SELECT u FROM User u ORDER BY u.name, u.email"),
-})
+@NamedQueries({@NamedQuery(name = User.DELETE, query = "DELETE FROM User u WHERE u.id=:id"), @NamedQuery(name = User.BY_EMAIL, query = "SELECT DISTINCT u FROM User u LEFT JOIN FETCH u.roles WHERE u.email=?1"), @NamedQuery(name = User.ALL_SORTED, query = "SELECT u FROM User u ORDER BY u.name, u.email"),})
 @Entity
 @Table(name = "users")
 public class User extends AbstractNamedEntity implements HasIdAndEmail {
@@ -39,15 +35,12 @@
     public static final String ALL_SORTED = "User.getAllSorted";
 
     @Column(name = "email", nullable = false, unique = true)
-    @Email
-    @NotBlank
-    @Size(max = 128)
+    @Email @NotBlank @Size(max = 128)
     @NoHtml(groups = {View.Web.class})  // https://stackoverflow.com/questions/17480809
     private String email;
 
     @Column(name = "password", nullable = false)
-    @NotBlank
-    @Size(min = 5, max = 128)
+    @NotBlank @Size(min = 5, max = 128)
     // https://stackoverflow.com/a/12505165/548473
     @JsonProperty(access = JsonProperty.Access.WRITE_ONLY)
     private String password;
@@ -62,8 +55,7 @@
 
     @Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
     @Enumerated(EnumType.STRING)
-    @CollectionTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"),
-            uniqueConstraints = {@UniqueConstraint(columnNames = {"user_id", "role"}, name = "uk_user_role")})
+    @CollectionTable(name = "user_role", joinColumns = @JoinColumn(name = "user_id"), uniqueConstraints = {@UniqueConstraint(columnNames = {"user_id", "role"}, name = "uk_user_role")})
     @Column(name = "role")
     @ElementCollection(fetch = FetchType.EAGER)
     //    @Fetch(FetchMode.SUBSELECT)
@@ -79,7 +71,7 @@
     @OneToMany(fetch = FetchType.LAZY, mappedBy = "user")//, cascade = CascadeType.REMOVE, orphanRemoval = true)
     @OrderBy("dateTime DESC")
     @OnDelete(action = OnDeleteAction.CASCADE) //https://stackoverflow.com/a/44988100/548473
-    @JsonManagedReference
+    @ApiModelProperty(hidden = true)
     private List<Meal> meals;
 
     public User() {
@@ -162,13 +154,6 @@
 
     @Override
     public String toString() {
-        return "User{" +
-                "id=" + id +
-                ", email=" + email +
-                ", name=" + name +
-                ", enabled=" + enabled +
-                ", roles=" + roles +
-                ", caloriesPerDay=" + caloriesPerDay +
-                '}';
+        return "User{" + "id=" + id + ", email=" + email + ", name=" + name + ", enabled=" + enabled + ", roles=" + roles + ", caloriesPerDay=" + caloriesPerDay + '}';
     }
 }
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/model/Meal.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/model/Meal.java b/src/main/java/ru/javawebinar/topjava/model/Meal.java
--- a/src/main/java/ru/javawebinar/topjava/model/Meal.java	(revision 113d830901926443374bce7fb46cbdd37aaf0328)
+++ b/src/main/java/ru/javawebinar/topjava/model/Meal.java	(date 1713527492771)
@@ -1,6 +1,6 @@
 package ru.javawebinar.topjava.model;
 
-import com.fasterxml.jackson.annotation.JsonBackReference;
+import com.fasterxml.jackson.annotation.JsonIgnore;
 import org.hibernate.annotations.OnDelete;
 import org.hibernate.annotations.OnDeleteAction;
 import org.hibernate.validator.constraints.Range;
@@ -53,7 +53,7 @@
     @ManyToOne(fetch = FetchType.LAZY)
     @JoinColumn(name = "user_id", nullable = false)
     @OnDelete(action = OnDeleteAction.CASCADE)
-    @JsonBackReference
+    @JsonIgnore
     @NotNull(groups = View.Persist.class)
     private User user;
 
Index: src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java b/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java
--- a/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java	(revision 113d830901926443374bce7fb46cbdd37aaf0328)
+++ b/src/main/java/ru/javawebinar/topjava/model/AbstractBaseEntity.java	(date 1713527558932)
@@ -1,5 +1,6 @@
 package ru.javawebinar.topjava.model;
 
+import io.swagger.annotations.ApiModelProperty;
 import ru.javawebinar.topjava.HasId;
 
 import javax.persistence.*;
@@ -19,6 +20,7 @@
     @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "global_seq")
 //  See https://hibernate.atlassian.net/browse/HHH-3718 and https://hibernate.atlassian.net/browse/HHH-12034
 //  Proxy initialization when accessing its identifier managed now by JPA_PROXY_COMPLIANCE setting
+    @ApiModelProperty(hidden = true)
     protected Integer id;
 
     protected AbstractBaseEntity() {
